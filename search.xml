<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DDNS动态解析教学（openwrt教程</title>
    <url>/2022/12/17/DNSdongtaijiexi/</url>
    <content><![CDATA[<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p><img src="https://s2.loli.net/2022/12/17/QqjdnL4Vacv3MuF.png" alt="SO_QFY_YK@C199MH~LRK@Y6.png"></p>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p><img src="https://s2.loli.net/2022/12/17/di1sTWnfC3ABeqm.png" alt="4__SC~T3_9HZH6_E@QPJ5_0.png"></p>
<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>![<del>M@9_Q2A__UOF_</del>K8U5ME`E.png](<a href="https://s2.loli.net/2022/12/17/JCNhVsMO5Fpq7HQ.png">https://s2.loli.net/2022/12/17/JCNhVsMO5Fpq7HQ.png</a>)<br>选完直接保存即可，这里配合cloudflare使用的。其他的请自行研究。</p>
]]></content>
      <categories>
        <category>DDNS</category>
      </categories>
      <tags>
        <tag>DDNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Google云修改账号密码</title>
    <url>/2022/01/26/Google/</url>
    <content><![CDATA[<ol>
<li><p>使用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
<p>编辑配置文件，按一下<code>i</code>即可进入编辑模式</p>
</li>
<li><p>找到<code>PermitRootLogin</code>并修改参数值为<code>yes</code>,如果前面有<code>#</code>删除掉</p>
</li>
<li><p>找到<code>PasswordAuthentication</code>同样是修改参数值为<code>yes</code>,如果前面有<code>#</code>也删除掉</p>
</li>
<li><p>接着按<code>Esc</code>键，再输入<code>:wq</code>后回车保存退出</p>
</li>
<li><p>重启SSH服务<br>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/initd.d/sshd restart</span><br></pre></td></tr></table></figure>
<p>即可重启SSH服务之后，你就可以用你刚刚设置的密码连接SSH了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>GC</category>
      </categories>
      <tags>
        <tag>GC</tag>
        <tag>密码</tag>
      </tags>
  </entry>
  <entry>
    <title>静态hexoblog搭建教程</title>
    <url>/2022/01/26/blogdajian/</url>
    <content><![CDATA[<h2 id="需要工具"><a href="#需要工具" class="headerlink" title="需要工具"></a>需要工具</h2><ol>
<li><a href="http://nodejs.cn/download/" title="node.js原站">Node.js</a>,这是原站的</li>
<li><a href="https://npm.taobao.org/mirrors/node/" title="node.js阿里云镜像站">Node.js</a>,镜像站</li>
<li><a href="https://code.visualstudio.com/Download/" title="编译">visualsudio</a>,编译软件<h2 id="要用到的框架或平台："><a href="#要用到的框架或平台：" class="headerlink" title="要用到的框架或平台："></a>要用到的框架或平台：</h2></li>
<li><a href="https://hexo.io/zh-cn/" title="hexo">hexo</a>,hexo框架</li>
<li><a href="https://gitee.com/" title="gitee">gitee</a>,gitee部署<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1>node.js和Typora就不说了，这个灰常简单。</li>
</ol>
<p>至于Git，它安装的时候选项挺多的，而且还都是洋文，看不懂的话就全部选 next 就行了。你要是非得搞明白它每个选项的意思，emmmm那建议你们自己去搜吧，网上一搜一大把。我反正是不知道每项的意思，我也不想知道~~~/手动狗头。</p>
<p>VsCode安装好之后默认是英文界面，可以在插件市场里搜索chinese，然后安装之后重启软件，就是中文版了。<br><img src="https://s2.loli.net/2022/08/02/MFRz1xf59GCuQeH.png" alt="fff.png"></p>
<h2 id="检验是否成功安装"><a href="#检验是否成功安装" class="headerlink" title="检验是否成功安装"></a>检验是否成功安装</h2><ul>
<li>node.js 的检查<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></li>
<li>npm的检查<br>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></li>
<li>Git 的检查<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
以上有显示版本号，则说明安装成功<h1 id="HEXO的安装"><a href="#HEXO的安装" class="headerlink" title="HEXO的安装"></a>HEXO的安装</h1></li>
</ul>
<ol>
<li>安装之前可以先设置一下淘宝镜像加速器<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li>
<li>全局安装框架<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li>
<li>1创建你的博客目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init 你博客的文件夹名字</span><br></pre></td></tr></table></figure></li>
<li>2<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd 你博客的文件夹名字</span><br></pre></td></tr></table></figure></li>
<li>复制文件到你博客的目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li>
<li>安装Hexo部署插件<br>请在你博客的目录下启动cmd，再执行以下代码<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h1 id="GIT的配置"><a href="#GIT的配置" class="headerlink" title="GIT的配置"></a>GIT的配置</h1>用<code>Win + R</code>打开运行，输入<code>cmd</code>并进入<code>cmd</code></li>
</ol>
<ul>
<li>设置用户名称<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br></pre></td></tr></table></figure></li>
<li>设置用户邮箱<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;用户邮箱&quot;</span><br></pre></td></tr></table></figure></li>
<li>生成密钥<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;用户邮箱&quot;</span><br></pre></td></tr></table></figure>
以上代码执行之后，会让你设置密码，推荐全都不要设置，直接连按三次回车键。<h1 id="博客-CONFIG-YML-文件的配置"><a href="#博客-CONFIG-YML-文件的配置" class="headerlink" title="博客 _CONFIG.YML 文件的配置"></a>博客 _CONFIG.YML 文件的配置</h1>打开你博客根目录的 _config.yml 文件，将一下信息添加到里面去。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://gitee.com/hcllmsx/hcllmsx.git    #替换成你自己仓库的HTTP URL地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
【注意区分】你博客根目录的<code> _config.yml</code>文件，和主题根目录的<code> _config.yml</code>文件！<h1 id="HEXO常用代码"><a href="#HEXO常用代码" class="headerlink" title="HEXO常用代码"></a>HEXO常用代码</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>hexo搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>butterfly</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>chatgpt网页版对接QQbot</title>
    <url>/2023/04/23/chatgpt/</url>
    <content><![CDATA[<h1 id="想想21世纪的人会用AI玩出什么新花样呢。"><a href="#想想21世纪的人会用AI玩出什么新花样呢。" class="headerlink" title="想想21世纪的人会用AI玩出什么新花样呢。"></a>想想21世纪的人会用AI玩出什么新花样呢。</h1><p>本人使用一个大佬的项目目前可以对接的项目还是很多的<br>支持ChatGPT、文心一言、Bing、Bard、ChatGLM、POE，多账号，人设调教，虚拟女仆、图片渲染、语音发送 | 支持 QQ、Telegram、Discord 等平台</p>
<p>我主要图一个对接QQbot，这里不推荐mirai，我用的gocqhttp<br>下面是仓库地址</p>
<ul>
<li><a href="https://github.com/lss233/chatgpt-mirai-qq-bot">chatgpt-mirai-qq-bot</a><h1 id="这里就不放图片了不方便放"><a href="#这里就不放图片了不方便放" class="headerlink" title="这里就不放图片了不方便放"></a>这里就不放图片了不方便放</h1></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>除夕快乐！！</title>
    <url>/2022/01/31/chuxi/</url>
    <content><![CDATA[<h1 id="祝大家"><a href="#祝大家" class="headerlink" title="祝大家"></a>祝大家</h1><blockquote>
<p>1、岁岁长欢愉，年年皆胜意。除夕快乐!<br>2、祝福好友，新年快乐，吉祥如意，幸福圆满。<br>3、除夕礼物初定版本已经到了!不够再定!各位除夕快乐!<br>4、除夕的祝福太多怕你看不到我的祝福，提前祝你除夕快乐。<br>5、除夕除夕除旧岁，祝你大富又大贵!除夕除夕除疲劳，祝你身体棒嗷嗷!除夕除夕除压力，祝你事业好运气!除夕除夕除烦恼，祝你心情天天好!除夕快乐!<br>6、往后的日子是崭新的，谁也别回头看了。除夕快乐!7、年年有我，岁岁有我。<br>8、对回不去的时光说再见，新的一年请你快乐一点。<br>9、想扔的东西扔了，想断的关系断了，新的一年，别再犹豫。10、除夕快乐，招财进你。<br>11、如果所有人都祝你新年快乐，那我便祝你遍历山河，仍然觉得人间值得。12、万物更新旧疾当愈，往事清零爱恨随意。<br>13、还在上班，还要加班!明天真的要过年了吗?14、春节，一想到加班，就兴奋的睡不着觉。<br>15、新的一年，不要万事胜意，万事如意就好。除夕快乐!</p>
</blockquote>
]]></content>
      <categories>
        <category>节日</category>
      </categories>
      <tags>
        <tag>除夕快乐</tag>
        <tag>节日</tag>
      </tags>
  </entry>
  <entry>
    <title>Cookie逆向分析指南</title>
    <url>/2023/08/01/claude1/</url>
    <content><![CDATA[<p>好的,我给您写一篇Cookie逆向的教程:</p>
<h1 id="Cookie逆向分析指南"><a href="#Cookie逆向分析指南" class="headerlink" title="Cookie逆向分析指南"></a>Cookie逆向分析指南</h1><p>Cookie是web应用中常用的身份认证和状态保持机制。通过逆向分析Cookie,我们可以了解web应用的认证流程和状态管理逻辑。</p>
<h2 id="Cookie基础知识"><a href="#Cookie基础知识" class="headerlink" title="Cookie基础知识"></a>Cookie基础知识</h2><ul>
<li>Cookie存储在客户端浏览器中</li>
<li>由服务器设置,客户端发送给服务器端</li>
<li>包含会话状态、认证token等信息</li>
</ul>
<h2 id="Cookie逆向分析步骤"><a href="#Cookie逆向分析步骤" class="headerlink" title="Cookie逆向分析步骤"></a>Cookie逆向分析步骤</h2><ol>
<li>利用浏览器开发者工具查看站点Cookie</li>
</ol>
<p>在Network面板中查看站点请求,找到Cookie信息。</p>
<ol start="2">
<li>分析Cookie内容和格式</li>
</ol>
<p>Cookie通常由名称、值、过期时间等组成。需要分析每个字段的作用。</p>
<ol start="3">
<li>修改Cookie测试站点变化</li>
</ol>
<p>可以尝试修改Cookie的值,观察站点行为变化。例如修改认证token来测试认证流程。</p>
<ol start="4">
<li>重放Cookie到其他浏览器/设备</li>
</ol>
<p>将获取的Cookie复制到其他浏览器/设备,测试其可移植性。</p>
<ol start="5">
<li>尝试伪造Cookie</li>
</ol>
<p>根据分析,尝试构造伪造的Cookie来访问被保护资源。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过逆向分析Cookie,我们可以找到站点认证、授权、状态管理的薄弱点,了解其内部机制,辅助开展渗透测试。</p>
]]></content>
      <tags>
        <tag>claude</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang图文爬虫</title>
    <url>/2023/08/01/claude2/</url>
    <content><![CDATA[<h1 id="使用Go语言写一个简单的网页图文爬虫"><a href="#使用Go语言写一个简单的网页图文爬虫" class="headerlink" title="使用Go语言写一个简单的网页图文爬虫"></a>使用Go语言写一个简单的网页图文爬虫</h1><p>网页爬虫是从网页中抓取数据的程序,它可以用来收集网络信息。本文会介绍如何用Go语言编写一个简单的网页图文爬虫。</p>
<h2 id="爬虫工作原理"><a href="#爬虫工作原理" class="headerlink" title="爬虫工作原理"></a>爬虫工作原理</h2><p>网页爬虫的基本工作流程是:</p>
<ol>
<li>指定需要爬取的网页URL</li>
<li>发送HTTP请求获取网页内容</li>
<li>分析网页内容,提取需要的数据</li>
<li>存储提取到的数据</li>
<li>生成爬取任务,继续爬取下一个网页</li>
</ol>
<p>经过持续循环,爬虫可以递归抓取网络上的各种信息。</p>
<h2 id="Go语言实现"><a href="#Go语言实现" class="headerlink" title="Go语言实现"></a>Go语言实现</h2><p>Go语言实现爬虫的主要步骤包括:</p>
<h3 id="导入相关库"><a href="#导入相关库" class="headerlink" title="导入相关库"></a>导入相关库</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;net/http&quot;</span></span><br><span class="line">  <span class="string">&quot;github.com/PuerkitoBio/goquery&quot;</span></span><br><span class="line">  <span class="string">&quot;regexp&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<ul>
<li>net/http提供发送HTTP请求的功能</li>
<li>goquery用来解析HTML文档</li>
<li>regexp用于编写正则表达式,提取数据</li>
</ul>
<h3 id="获取网页内容"><a href="#获取网页内容" class="headerlink" title="获取网页内容"></a>获取网页内容</h3><p>使用http.Get()函数发送HTTP请求获取网页内容。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp, err := http.Get(url)</span><br></pre></td></tr></table></figure>

<h3 id="解析网页"><a href="#解析网页" class="headerlink" title="解析网页"></a>解析网页</h3><p>使用goquery解析获取到的HTML文档。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">doc, err := goquery.NewDocumentFromReader(resp.Body)</span><br></pre></td></tr></table></figure>

<h3 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h3><p>使用Find方法结合正则表达式来提取文本和图片URL。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">textRe := regexp.MustCompile(<span class="string">`&lt;p&gt;(.*?)&lt;/p&gt;`</span>)</span><br><span class="line">imgRe := regexp.MustCompile(<span class="string">`&lt;img src=&quot;(.*?)&quot;`</span>)</span><br><span class="line"></span><br><span class="line">doc.Find(<span class="string">&quot;p&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">  <span class="comment">//提取文本</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">doc.Find(<span class="string">&quot;img&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">  <span class="comment">//提取图片URL  </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="存储和后续处理"><a href="#存储和后续处理" class="headerlink" title="存储和后续处理"></a>存储和后续处理</h3><p>可以将提取到的数据存储下来,并生成后续的爬取任务。</p>
<p>通过上述步骤,我们就可以用Go语言实现一个简单的网页爬虫用于抓取图文信息了。接下来可以继续优化和扩展其功能,构建更强大的爬虫系统。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;net/http&quot;</span></span><br><span class="line">  <span class="string">&quot;github.com/PuerkitoBio/goquery&quot;</span></span><br><span class="line">  <span class="string">&quot;regexp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 指定要爬取的网页URL</span></span><br><span class="line">  url := <span class="string">&quot;http://www.targetwebpage.com&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取网页HTML</span></span><br><span class="line">  resp, err := http.Get(url)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用goquery解析HTML</span></span><br><span class="line">  doc, err := goquery.NewDocumentFromReader(resp.Body)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 编写正则表达式,提取文本和图片URL</span></span><br><span class="line">  textRe := regexp.MustCompile(<span class="string">`&lt;p&gt;(.*?)&lt;/p&gt;`</span>)</span><br><span class="line">  imgRe := regexp.MustCompile(<span class="string">`&lt;img src=&quot;(.*?)&quot;`</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用goquery的Find方法查找元素</span></span><br><span class="line">  doc.Find(<span class="string">&quot;p&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">    text := s.Text()</span><br><span class="line">    <span class="comment">// 使用正则表达式提取文本</span></span><br><span class="line">    match := textRe.FindStringSubmatch(text)</span><br><span class="line">    <span class="keyword">if</span> match != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="built_in">println</span>(match[<span class="number">1</span>]) </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  doc.Find(<span class="string">&quot;img&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">    imgURL, _ := s.Attr(<span class="string">&quot;src&quot;</span>)</span><br><span class="line">    <span class="comment">// 使用正则表达式提取图片URL</span></span><br><span class="line">    match := imgRe.FindStringSubmatch(imgURL)</span><br><span class="line">    <span class="keyword">if</span> match != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="built_in">println</span>(match[<span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个简单的爬虫使用goquery库解析HTML,并使用正则表达式提取文本和图片URL。您可以根据需要继续扩展功能,如抓取更多页面、存储数据等。</p>
]]></content>
      <tags>
        <tag>claude</tag>
      </tags>
  </entry>
  <entry>
    <title>Chatgpt网页版对接指南</title>
    <url>/2023/08/01/claude3/</url>
    <content><![CDATA[<h1 id="ChatGPT-for-Bot"><a href="#ChatGPT-for-Bot" class="headerlink" title="ChatGPT for Bot"></a>ChatGPT for Bot</h1><p>一款支持多平台和各种语言模型的强大对话机器人!</p>
<p align="center">
  <img src="https://user-images.githubusercontent.com/8984680/230702158-73967aa9-01be-44d6-bbd9-24437e333140.png" width="200" />
</p>

<p><strong>ChatGPT for Bot</strong> 是一个开源的对话机器人项目,它支持主流的对话AI模型,可以部署到多种聊天平台上,提供智能的自然语言交互。</p>
<h2 id="🚀-特性"><a href="#🚀-特性" class="headerlink" title="🚀 特性"></a>🚀 特性</h2><ul>
<li>💬 支持 <strong>OpenAI ChatGPT</strong> 对话模型</li>
<li>🎙 支持文字转语音功能</li>
<li>🖼 支持消息和代码自动转图片 </li>
<li>⚡ 快速、稳定、易用</li>
<li>🤖 支持 Mirai、OneBot(go-cqhttp)、Telegram、Discord、微信等主流平台</li>
<li>🌈 提供预设系统,一键切换聊天风格</li>
<li>🛠 内置丰富的管理和调试命令</li>
<li>📦 一键安装包支持快速上手</li>
</ul>
<img src="https://user-images.githubusercontent.com/8984680/167273317-10ad3850-65ba-4812-97c2-de2cadc67a33.png" width="500" />

<h2 id="📦-部署"><a href="#📦-部署" class="headerlink" title="📦 部署"></a>📦 部署</h2><p>我们提供多种方式帮助你快速部署,包括:</p>
<ul>
<li>🐳 基于 Docker 的一键安装 </li>
<li>🖥 Windows 和 Mac 一键启动包</li>
<li>🔧 使用 Docker Compose 进行组件化部署</li>
<li>⚙ 手动安装和配置</li>
</ul>
<p>具体的安装方法请查看:<a href="https://github.com/lss233/chatgpt-mirai-qq-bot/blob/main/README.md#%EF%B8%8F-%E6%90%AD%E5%BB%BA">详细部署文档</a></p>
<h2 id="💬-支持的平台"><a href="#💬-支持的平台" class="headerlink" title="💬 支持的平台"></a>💬 支持的平台</h2><table>
<thead>
<tr>
<th>平台</th>
<th>私聊</th>
<th>群聊</th>
<th>触发回复</th>
<th>管理命令</th>
<th>图片发送</th>
<th>语音</th>
</tr>
</thead>
<tbody><tr>
<td>Mirai</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>OneBot</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Telegram</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>⚠️</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Discord</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>❌</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>微信小程序</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>❌</td>
<td>✅</td>
<td>✅</td>
</tr>
</tbody></table>
<h2 id="🎨-预设系统"><a href="#🎨-预设系统" class="headerlink" title="🎨 预设系统"></a>🎨 预设系统</h2><p>内置的预设系统可以一键切换机器人的聊天风格,自带 <code>猫娘</code>、<code>正常</code> 等预设。</p>
<p>可以在 <a href="https://github.com/lss233/awesome-chatgpt-qq-presets">这里</a> 获取更多大家分享的预设。</p>
<img src="https://user-images.githubusercontent.com/8984680/167273954-37c855eb-e89a-4db5-9e8f-7cda4ccab56e.gif" width="300" />

<h2 id="🏗-HTTP-API"><a href="#🏗-HTTP-API" class="headerlink" title="🏗 HTTP API"></a>🏗 HTTP API</h2><p>提供 HTTP API 可以轻松接入聊天机器人的能力:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /v1/chat</span><br><span class="line">&#123;</span><br><span class="line">  &quot;session_id&quot;: &quot;test&quot;,</span><br><span class="line">  &quot;username&quot;: &quot;user&quot;, </span><br><span class="line">  &quot;message&quot;: &quot;你好&quot; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RESPONSE </span><br><span class="line">&#123;</span><br><span class="line">  &quot;result&quot;: &quot;DONE&quot;,</span><br><span class="line">  &quot;message&quot;: [&quot;你好,很高兴认识你&quot;],</span><br><span class="line">  &quot;voice&quot;: [],</span><br><span class="line">  &quot;image&quot;: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="🤝-社区支持"><a href="#🤝-社区支持" class="headerlink" title="🤝 社区支持"></a>🤝 社区支持</h2><p>加入我们的社区获取更多支持:</p>
<ul>
<li><a href="https://discord.gg/cc3S2R6RQV">用户社群</a></li>
<li><a href="https://github.com/lss233/chatgpt-mirai-qq-bot/issues">问题反馈</a></li>
<li><a href="https://space.bilibili.com/1576310330">视频教程</a></li>
</ul>
<h2 id="⭐️-参与贡献"><a href="#⭐️-参与贡献" class="headerlink" title="⭐️ 参与贡献"></a>⭐️ 参与贡献</h2><p>这个项目由社区驱动,欢迎提出问题和贡献代码!</p>
<ul>
<li>提交问题和建议</li>
<li>在文档中修复错误</li>
<li>添加新的功能和优化</li>
</ul>
<p>期待你的加入!</p>
]]></content>
      <tags>
        <tag>chatgptweb</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo blog文件移植到其他电脑</title>
    <url>/2022/03/16/hexoyizhi/</url>
    <content><![CDATA[<h1 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>首先把你的blog文件下载下来存在你觉得不错的网盘上</p>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>然后将网盘文件下载下来<br>放到新的设备上</p>
<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>在设备上安装</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>
<p>安装hexo框架<br>node.js检查</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>安装git后</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成密钥<br>ssh文件打开后导出公钥<br>并且上传到gitee的密钥管理上面去。<br>然后就完成了</p>
]]></content>
  </entry>
  <entry>
    <title>BattleBit Remastered Playtest</title>
    <url>/2022/01/28/game/</url>
    <content><![CDATA[<h1 id="推荐游戏"><a href="#推荐游戏" class="headerlink" title="推荐游戏"></a>推荐游戏</h1><h2 id="BattleBit演示"><a href="#BattleBit演示" class="headerlink" title="BattleBit演示"></a>BattleBit演示</h2><p>这个游戏据我知道以后我就下来玩了下。<br><img src="https://s2.loli.net/2022/01/28/Y2p8ZiLoshVHMNy.png" alt="gsfgee.png"><br>这个游戏基本对配置没啥要求，开发是基于<code>unity</code><br><img src="https://s2.loli.net/2022/01/28/YPqFcQeb43hsoOy.png" alt="gafejc.png"></p>
<h2 id="体验心得"><a href="#体验心得" class="headerlink" title="体验心得"></a>体验心得</h2><p>距离开放正式服还有点时间，目前可以开自建房玩。<br>我体验了下来，射击手感很好。(和其他测评玩家一样吊打2042)</p>
]]></content>
      <tags>
        <tag>steam</tag>
      </tags>
  </entry>
  <entry>
    <title>旅行日志</title>
    <url>/2022/02/04/lvxing/</url>
    <content><![CDATA[<div class="fj-gallery"><p><img src="https://s2.loli.net/2022/02/04/qaYoQOxzlNucKEJ.png"><br><img src="https://s2.loli.net/2022/02/04/flAimT6dLvjSbPO.png"><br><img src="https://s2.loli.net/2022/02/04/42lMtvT93Vk1PDh.png"><br><img src="https://s2.loli.net/2022/02/04/of5Yd3K8xQpChS2.png"></p>
          </div>]]></content>
      <categories>
        <category>旅行</category>
      </categories>
      <tags>
        <tag>play</tag>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft红石向服(1.19.1)</title>
    <url>/2022/01/27/mc1.19/</url>
    <content><![CDATA[<h1 id="服务器介绍"><a href="#服务器介绍" class="headerlink" title="服务器介绍"></a>服务器介绍</h1><h2 id="本服务器使用E3配置，使用ddns动态解析公网IP地址。-ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。-如果你想加入我们的服务器，请加QQ群-421953860-虽然本服务器没有开启白名单，但是还是希望你能加入该群。"><a href="#本服务器使用E3配置，使用ddns动态解析公网IP地址。-ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。-如果你想加入我们的服务器，请加QQ群-421953860-虽然本服务器没有开启白名单，但是还是希望你能加入该群。" class="headerlink" title="本服务器使用E3配置，使用ddns动态解析公网IP地址。(ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。)如果你想加入我们的服务器，请加QQ群:421953860 虽然本服务器没有开启白名单，但是还是希望你能加入该群。"></a>本服务器使用E3配置，使用ddns动态解析公网IP地址。(ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。)如果你想加入我们的服务器，请加QQ群:<code>421953860</code> 虽然本服务器没有开启白名单，但是还是希望你能加入该群。</h2><p><a href="https://sm.ms/image/2knqpPOAVQtr96I" target="_blank"><img src="https://s2.loli.net/2022/08/16/2knqpPOAVQtr96I.png" ></a><br>出生点附件<br><a href="https://sm.ms/image/WIbZacGXjgzvwPt" target="_blank"><img src="https://s2.loli.net/2022/08/16/WIbZacGXjgzvwPt.png" ></a><br>yamatu的家<br><a href="https://sm.ms/image/R95NhgTaroCZxeu" target="_blank"><img src="https://s2.loli.net/2022/08/16/R95NhgTaroCZxeu.png" ></a><br>刷铁机<br><a href="https://sm.ms/image/UVM59Di36bJajwC" target="_blank"><img src="https://s2.loli.net/2022/08/16/UVM59Di36bJajwC.png" ></a><br>刷石机<br><a href="https://sm.ms/image/TQy4a35pv6efiOI" target="_blank"><img src="https://s2.loli.net/2022/08/16/TQy4a35pv6efiOI.png" ></a><br>山洞仓库<br><a href="https://sm.ms/image/dYTOnpuZc42Fo5h" target="_blank"><img src="https://s2.loli.net/2022/08/16/dYTOnpuZc42Fo5h.png" ></a><br>农场<br>服务器地址：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">nbnb.yamatu.xyz</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mc服</category>
      </categories>
      <tags>
        <tag>生存服</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft红石向生存服(1.16.5已停止该存档)</title>
    <url>/2022/01/27/mcvps/</url>
    <content><![CDATA[<p><a href="https://www.fansmc.com/xuanchuan/1284/5809"><img src="https://www.fansmc.com/banner/1284/default/FFFFFF/FFFFFF/medium" /></a></p>
<h1 id="服务器介绍"><a href="#服务器介绍" class="headerlink" title="服务器介绍"></a>服务器介绍</h1><h2 id="本服务器使用E3配置，使用ddns动态解析公网IP地址。-ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。-如果你想加入我们的服务器，请加QQ群-421953860-虽然本服务器没有开启白名单，但是还是希望你能加入该群。没有正版验证，欢迎你的到来。"><a href="#本服务器使用E3配置，使用ddns动态解析公网IP地址。-ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。-如果你想加入我们的服务器，请加QQ群-421953860-虽然本服务器没有开启白名单，但是还是希望你能加入该群。没有正版验证，欢迎你的到来。" class="headerlink" title="本服务器使用E3配置，使用ddns动态解析公网IP地址。(ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。)如果你想加入我们的服务器，请加QQ群:421953860 虽然本服务器没有开启白名单，但是还是希望你能加入该群。没有正版验证，欢迎你的到来。 "></a>本服务器使用E3配置，使用ddns动态解析公网IP地址。(ping延迟大概40ms，不过有些时间会显示很高但也只是显示而已。)如果你想加入我们的服务器，请加QQ群:<code>421953860</code> 虽然本服务器没有开启白名单，但是还是希望你能加入该群。<code>没有正版验证，欢迎你的到来。</code> <img src="https://s2.loli.net/2022/04/05/5p3b6Maz1SodZCs.png" alt="SLD_G6DA_TSH74IYQ_S9_T.png"></h2><h3 id="在这个服务器里面你根本不需要担心腐竹跑路，除非机械硬盘坏掉了-你在本服务器的存档都会定时备份下来"><a href="#在这个服务器里面你根本不需要担心腐竹跑路，除非机械硬盘坏掉了-你在本服务器的存档都会定时备份下来" class="headerlink" title="在这个服务器里面你根本不需要担心腐竹跑路，除非机械硬盘坏掉了(你在本服务器的存档都会定时备份下来)"></a>在这个服务器里面你根本不需要担心腐竹跑路，除非机械硬盘坏掉了(你在本服务器的存档都会定时备份下来)</h3><h3 id="现阶段我们缺少会建筑的大佬，-o-￣▽￣-o你懂我意思的。（还不快进来！！！说的就是你！！！）"><a href="#现阶段我们缺少会建筑的大佬，-o-￣▽￣-o你懂我意思的。（还不快进来！！！说的就是你！！！）" class="headerlink" title="现阶段我们缺少会建筑的大佬，~ o(￣▽￣)o你懂我意思的。（还不快进来！！！说的就是你！！！）"></a>现阶段我们缺少会建筑的大佬，~ o(<em>￣▽￣</em>)o你懂我意思的。（还不快进来！！！说的就是你！！！）</h3><p>出生点场景，以及正在设计的红石电子钟。<br><img src="https://s2.loli.net/2022/04/05/ZKbRmvH7iVqft2C.png" alt="_D8B2E___3X3M2OJ@~R.png"><br><img src="https://s2.loli.net/2022/04/05/4d9IrUo6SkuCle5.png" alt="_D8B2DJO5E.png"><br><img src="https://s2.loli.net/2022/04/05/JfP2KVyGowabgYT.png" alt="_D8B2DJO5E_.png"><br>刷怪塔（上空加树场）<br><img src="https://s2.loli.net/2022/04/05/hYvujX849FNaESI.png" alt="B192_~~O_SWX_K_B76P7XFK.png"><br>猪人塔<br><img src="https://s2.loli.net/2022/04/05/oOLwpAUXa4K5TfF.png" alt="X9XWVSN___7@PWFQ6FF7_K.png"><br>女巫塔</p>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><h2 id="还有更多的景观没有展示出来"><a href="#还有更多的景观没有展示出来" class="headerlink" title="还有更多的景观没有展示出来"></a>还有更多的景观没有展示出来</h2><h2 id="版本1-16-5"><a href="#版本1-16-5" class="headerlink" title="版本1.16.5"></a>版本<code>1.16.5</code></h2><h2 id="以下是服务器地址"><a href="#以下是服务器地址" class="headerlink" title="以下是服务器地址"></a>以下是服务器地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nbnb.yamatu.xyz</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mc服</category>
      </categories>
      <tags>
        <tag>生存服</tag>
      </tags>
  </entry>
  <entry>
    <title>咸鱼翻身计划</title>
    <url>/2023/06/16/xianyujihua/</url>
    <content><![CDATA[<h1 id="咸鱼翻身计划"><a href="#咸鱼翻身计划" class="headerlink" title="咸鱼翻身计划"></a>咸鱼翻身计划</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>高三读完，深知自己这么多年来困于学校，即对校外的世界不了解，也对自己的人生无规划，活脱脱的像一条咸鱼。</p>
<p>这个暑假有将近三个月时间，是虚度这三个月，还是充分利用这三个月时间提升自己、拓展视野呢？我想后者还是好于前者。未来飘忽不定，前路茫茫未知。我需要知识武装自己，急需技能拥抱未来。</p>
<p>于是，在借鉴逐日计划后，我和哥哥制定了咸鱼翻身计划。希望这项计划能将我们洗刷，让我们成长！</p>
<p>2023年6月16日     高考已过，未来在即</p>
<h2 id="计划内容"><a href="#计划内容" class="headerlink" title="计划内容"></a>计划内容</h2><ol>
<li>剪辑</li>
<li>表格</li>
<li>拍摄</li>
<li>健身<ul>
<li>am 起床 <ul>
<li>在家无氧</li>
<li>6:30am 出去无氧</li>
</ul>
</li>
<li>am 买菜回家</li>
</ul>
</li>
<li>乐器<ul>
<li>博：重拾吉他 </li>
<li>炜：初见吉他</li>
</ul>
</li>
<li>前端，网站</li>
<li>车</li>
<li>画图，设计<ul>
<li>平面设计</li>
<li>3D设计</li>
</ul>
</li>
<li>适度游戏，练字人生<ul>
<li>把字写的像人写的，把人能写出来的字写出来</li>
</ul>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>butterfly-giter聊天室</title>
    <url>/2022/01/26/pinglun/</url>
    <content><![CDATA[<h2 id="Gitter-注册"><a href="#Gitter-注册" class="headerlink" title="Gitter 注册"></a>Gitter 注册</h2><p>先去 Gitter 注册一个账号，可以直接使用 GitHub 登录</p>
<p><a href="https://gitter.im/" title="点这个">https://gitter.im/</a></p>
<p>然后先创建一个 <code>Community</code> 社区，再创建一个 Room 聊天室（创建聊天室时 community 选择刚创建的即可）</p>
<p>比如我创建了一个<code>community</code>叫<code>ednovas</code>, 然后创建了一个叫 ChatRoom 的聊天室。这个要记住，下一步用到。<br><img src="https://s2.loli.net/2022/08/02/MfDrZqtA2UjdBwW.png" alt="sadf.png"></p>
<ol>
<li>然后创建相应的<code>Create community</code><br><img src="https://s2.loli.net/2022/08/02/hZcALPrqNgzFjkp.png" alt="bffgr.png"></li>
<li>在创建对应仓库的<code>Create room</code><br><img src="https://s2.loli.net/2022/08/02/MfDrZqtA2UjdBwW.png" alt="abfht.png"></li>
<li>修改<code>主题配置文件</code><br><img src="https://s2.loli.net/2022/08/02/vXrCdIFjQ8G3oiM.png" alt="adsfc.png"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># gitter</span><br><span class="line"># https://gitter.im/</span><br><span class="line">gitter:</span><br><span class="line">  enable: true</span><br><span class="line">  room: #填写你创建的community或者room名称</span><br></pre></td></tr></table></figure>
<h2 id="其他选择"><a href="#其他选择" class="headerlink" title="其他选择"></a>其他选择</h2>本博客为了方便选择了 Gitter 在线聊天工具，界面简洁但是不太美观。如果想要好看的话，推荐选择 tidio 在线聊天工具。它可以自行配置样式，如图：<br><img src="https://s2.loli.net/2022/08/02/ztLPRVZeNvjqXnD.png" alt="jjjjr.png"><br><img src="https://s2.loli.net/2022/08/02/b9aPuTFVU1jnYqB.png" alt="ffe123.png"></li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>评论</tag>
      </tags>
  </entry>
  <entry>
    <title>疫情(结束了)</title>
    <url>/2022/12/01/yiq/</url>
    <content><![CDATA[<p>终于结束了，清晰认识病毒的可怕。</p>
]]></content>
  </entry>
  <entry>
    <title>hexo常用语法</title>
    <url>/2022/01/27/yufa/</url>
    <content><![CDATA[<h1 id="一、Markdown基础语法"><a href="#一、Markdown基础语法" class="headerlink" title="一、Markdown基础语法"></a>一、Markdown基础语法</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure>
<h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*倾斜字体*  </span><br><span class="line">**加粗字体**  </span><br><span class="line">***加粗倾斜字***    </span><br><span class="line">~~这是加删除线的文字~~  </span><br></pre></td></tr></table></figure>
<h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&gt;引用</span><br><span class="line">&gt;&gt;引用</span><br><span class="line">&gt;&gt;&gt;引用 </span><br></pre></td></tr></table></figure>
<h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4.分割线"></a>4.分割线</h2><p>三个或者三个以上的<code>-</code>或者<code>*</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure>
<h2 id="5-引用图片"><a href="#5-引用图片" class="headerlink" title="5.引用图片"></a>5.引用图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![tianqi.png图片名字](https://s2.loli.net/2022/01/27/ObDleJL1CUgoPHx.png图片链接)</span><br></pre></td></tr></table></figure>
<h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6.超链接"></a>6.超链接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[超链接名字](超链接地址 &quot;超链接title&quot;)   title可加可不加  </span><br></pre></td></tr></table></figure>
<h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><h2 id="7-1-无序列表"><a href="#7-1-无序列表" class="headerlink" title="7.1 无序列表"></a>7.1 无序列表</h2><figure class="highlight plaintext"><figcaption><span>+ * ```都可以使用</span></figcaption><table><tr><td class="code"><pre><span class="line">```json</span><br><span class="line">- 列表内容  </span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容  </span><br><span class="line">注意：- + * 跟内容之间都要有一个空格  </span><br></pre></td></tr></table></figure>
<h2 id="7-2-有序列表"><a href="#7-2-有序列表" class="headerlink" title="7.2 有序列表"></a>7.2 有序列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列表内容  </span><br><span class="line">2. 列表内容  </span><br><span class="line">3. 列表内容   </span><br><span class="line">   注意空格</span><br></pre></td></tr></table></figure>
<h2 id="7-3-列表嵌套"><a href="#7-3-列表嵌套" class="headerlink" title="7.3 列表嵌套"></a>7.3 列表嵌套</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* 嵌套   </span><br><span class="line">    * 嵌套</span><br><span class="line">        * 嵌套</span><br><span class="line">            1. 嵌套</span><br><span class="line">            2. 嵌套</span><br><span class="line">            3. 嵌套</span><br></pre></td></tr></table></figure>
<h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a>8. 表格</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">-有一个就行，为了对齐,可以多加几个;</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中;</span><br><span class="line">-右边加：表示文字居右。  </span><br></pre></td></tr></table></figure>
<h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9.代码"></a>9.代码</h2><h2 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码"></a>单行代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">``` 代码内容 ```</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo语法</tag>
      </tags>
  </entry>
  <entry>
    <title>原神CD翻录</title>
    <url>/2022/02/06/yuansheng/</url>
    <content><![CDATA[<p><a href="http://nbnb.yamatu.xyz:5212/s/G6Ug" target="_blank">这里是原神私服下载</a>:<br>密码：6666<br><img src="https://s2.loli.net/2022/02/06/jQ2noSAFVeW8vRO.jpg" alt="gggg.png"><br><img src="https://s2.loli.net/2022/02/06/1dN9M8ahreBfbOA.jpg" alt="gggg2.png"></p>
]]></content>
      <categories>
        <category>原神</category>
      </categories>
      <tags>
        <tag>原神</tag>
      </tags>
  </entry>
  <entry>
    <title>原神私服搭建教程(深渊版丢弃过期)</title>
    <url>/2022/05/01/yuanshen/</url>
    <content><![CDATA[<h1 id="原神私服搭建（成果演示）"><a href="#原神私服搭建（成果演示）" class="headerlink" title="原神私服搭建（成果演示）"></a>原神私服搭建（成果演示）</h1><p><img src="https://s2.loli.net/2022/05/01/mKMbQYEZtp4aC21.png" alt="123123.png"><br><img src="https://s2.loli.net/2022/08/02/snGTy4L2YtOSgDm.png" alt="2342632414.png"></p>
<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p><a href="http://nbnb.yamatu.xyz:5212/s/0Ds7" target="_blank">JAVA8下载注意这里是老版本jdk1.8.0_202</a>:<br>密码：6666<br><a href="http://nbnb.yamatu.xyz:5212/s/XDfx" target="_blank">这里是原神私服下载</a>:<br>密码：6666<br><a href="https://blog.csdn.net/sun_junkai/article/details/85635039/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.pc_relevant_default&spm=1001.2101.3001.4242.1&utm_relevant_index=3" target="_blank">配置环境变量</a>:</p>
<blockquote>
<blockquote>
<p>注意这里配置环境变量时候要删除以前版本和与其冲突的jre</p>
</blockquote>
</blockquote>
<h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>部分详细操作在压缩包中，请自行体会。</p>
<h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><blockquote>
<blockquote>
<p>你需要做的是打开地址转发在地址转发中输入,运行说明文档里面有的文件，那行代码不全替换为下面的。Genshin EMU（最新服务端包含自动刷怪 修复卡池 修复部分副本）</p>
</blockquote>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Original script by NicknameGG, modified for Grasscutter by contributors. */</span></span><br><span class="line">import System;</span><br><span class="line">import System.Windows.Forms;</span><br><span class="line">import Fiddler;</span><br><span class="line">import System.Text.RegularExpressions;</span><br><span class="line">var list = [</span><br><span class="line">    <span class="string">&quot;https://api-os-takumi.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hk4e-api-os-static.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hk4e-sdk-os.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dispatchosglobal.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://osusadispatch.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://account.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://log-upload-os.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dispatchcntest.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://devlog-upload.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://webstatic.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://log-upload.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hk4e-sdk.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://api-beta-sdk.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://api-beta-sdk-os.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://cnbeta01dispatch.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dispatchcnglobal.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://cnbeta02dispatch.yuanshen.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://sdk-os-static.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://webstatic-sea.mihoyo.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://webstatic-sea.hoyoverse.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hk4e-sdk-os-static.hoyoverse.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://sdk-os-static.hoyoverse.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://api-account-os.hoyoverse.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hk4e-sdk-os.hoyoverse.com/&quot;</span> <span class="comment">// Line 24</span></span><br><span class="line">    ];</span><br><span class="line">class Handlers</span><br><span class="line">&#123;</span><br><span class="line">    static function OnBeforeRequest(oS: Session) &#123;</span><br><span class="line">        var active = true;</span><br><span class="line">        if(active) &#123;</span><br><span class="line">            if(oS.uriContains(<span class="attr">&quot;http://overseauspider.yuanshen.com:8181/log&quot;</span>))&#123;</span><br><span class="line">                oS.oRequest.FailSession(404, <span class="attr">&quot;Blocked&quot;</span>, <span class="attr">&quot;yourmom&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            for(var i = <span class="number">0</span>; i &lt; <span class="number">24</span> ;i++) &#123;</span><br><span class="line">                if(oS.uriContains(list[i])) &#123;</span><br><span class="line">                    oS.host = <span class="attr">&quot;localhost&quot;</span>; <span class="comment">// This can also be replaced with another IP address.</span></span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>替换好了后直接打开你这个文件下下的原神，<code>E:\Genshin Impact\Genshin Impact Game</code> 直接启动后就可以了<br>登录界面密码随便乱输入就行了</p>
<h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><ol>
<li>地址转发.bat保持开启状态</li>
<li>启动服务.bat后如果出现报错八九不离十是java版本问题，治理建议直接翻一下报错代码。</li>
<li>登录界面密码随便乱输入就行了</li>
<li>地址转发.bat和启动服务.bat要保持开启状态</li>
</ol>
<h2 id="对好友使用代码"><a href="#对好友使用代码" class="headerlink" title="对好友使用代码"></a>对好友使用代码</h2><p>获取物品<br><code>/give uid 物品id 数量(这里uid也可以不要)</code><br>直接CTRL+F搜你要的物品</p>
]]></content>
      <categories>
        <category>原神</category>
      </categories>
      <tags>
        <tag>原神</tag>
      </tags>
  </entry>
</search>
